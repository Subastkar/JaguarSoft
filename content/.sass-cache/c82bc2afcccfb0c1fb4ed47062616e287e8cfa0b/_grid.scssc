3.0.25 (Classy Cassidy)
6cbf1aca3aa02734977200d7212ac8f3ec3cad0f
o:Sass::Tree::RootNode
:
@linei:@template" //  --------------------------------------------------------------
//  SASS Gridification
//  * Author:   Chris Eppstein
//  A SASS adaptation of Blueprint CSS
//  * Version:         0.7.1 (2008-02-25)
//  * Website:         http://code.google.com/p/blueprintcss/
//  Based on work by:
//  * Lorin Tackett     [lorintackett.com]
//  * Olav Bjorkoy      [bjorkoy.com]
//  * Nathan Borror     [playgroundblues.com]
//  * Jeff Croft        [jeffcroft.com]
//  * Christian Metts   [mintchaos.com]
//  * Khoi Vinh         [subtraction.com]
//  Read more about using a grid here:
//  * http://www.subtraction.com/2007/03/18/oh-yeeaahh
//  --------------------------------------------------------------

@import "compass/utilities/general/float";
@import "compass/utilities/general/clearfix";

// The number of columns in the grid.
$blueprint_grid_columns: 24 !default;

// The width of a column
$blueprint_grid_width: 30px !default;

// The amount of margin between columns
$blueprint_grid_margin: 10px !default;

// The width of a column including the margin. With default settings this is `40px`.
$blueprint_grid_outer_width: $blueprint_grid_width + $blueprint_grid_margin;

// The width of the container. With default settings this is `950px`.
$blueprint_container_size: $blueprint_grid_outer_width * $blueprint_grid_columns - $blueprint_grid_margin;

// Generates presentational class names that you can use
// in your html to layout your pages.
//
// #### Note:
// Best practices discourage using this mixin,
// but it is provided to support legacy websites
// and to test the sass port against blueprint's example pages.

@mixin blueprint-grid {
  // A container should group all your columns
  .container {
    @include container; }
  .column, #{enumerate("div.span", 1, $blueprint_grid_columns)} {
    @include column-base; }
  // The last column in a row needs this class (or mixin) or it will end up on the next row.
  .last, div.last {
    @include last; }
  // Use these classes (or mixins) to set the width of a column.
  @for $n from 1 to $blueprint_grid_columns {
    .span-#{$n} {
      @include span($n); } }
  .span-#{$blueprint_grid_columns}, div.span-#{$blueprint_grid_columns} {
    @include span($blueprint_grid_columns);
    margin: 0; }
  input, textarea, select {
    @for $n from 1 through $blueprint_grid_columns {
      &.span-#{$n} {
        @include span($n, true); } } }
  // Add these to a column to append empty cols.
  @for $n from 1 to $blueprint_grid_columns {
    .append-#{$n} {
      @include append($n); } }
  // Add these to a column to prepend empty cols.
  @for $n from 1 to $blueprint_grid_columns {
    .prepend-#{$n} {
      @include prepend($n); } }
  // Use these classes on an element to push it into the
  // next column, or to pull it into the previous column.
  #{enumerate(".pull", 1, $blueprint_grid_columns)} {
    @include pull-base; }
  @for $n from 1 through $blueprint_grid_columns {
    .pull-#{$n} {
      @include pull-margins($n); } }
  #{enumerate(".push", 1, $blueprint_grid_columns)} {
    @include push-base; }
  @for $n from 1 through $blueprint_grid_columns {
    .push-#{$n} {
      @include push-margins($n); } }
  .prepend-top {
    @include prepend-top; }
  .append-bottom {
    @include append-bottom; } }

// A container for your columns.
//
// #### Note:
// If you use this mixin without the class and want to support ie6
// you must set text-align left on your container element in an IE stylesheet.
@mixin container {
  width: $blueprint_container_size;
  margin: 0 auto;
  @include clearfix; }

// The last column in a row needs this mixin or it will end up
// on the next row in some browsers.
@mixin last {
  margin-right: 0; }

// Use this mixins to set the width of n columns.
@mixin column($n, $last: false) {
  @include column-base($last);
  @include span($n); }

// Set only the width of an element to align it with the grid.
// Most of the time you'll want to use `+column` instead.
//
// This mixin is especially useful for aligning tables to the grid.
@mixin span($n, $override: false) {
  $width: $blueprint_grid_width * $n + $blueprint_grid_margin * ($n - 1);
  @if $override {
    width: $width !important; }
  @else {
    width: $width; } }

// The basic set of styles needed to make an element
// behave like a column:
//
// * floated to left
// * gutter margin on the right (unless the last column)
// * Some IE fixes
//
// #### Note:
// This mixin gets applied automatically when using `+column`
// so you probably don't need to use it directly unless
// you need to deviate from the grid or are trying
// to reduce the amount of generated CSS.
@mixin column-base($last: false) {
  @include float-left;
  @if $last {
    @include last; }
  @else {
    margin-right: $blueprint_grid_margin; }
  * html & {
    overflow-x: hidden; } }

// Mixin to a column to append n empty columns to the right
// by adding right padding to the column.
@mixin append($n) {
  padding-right: $blueprint_grid_outer_width * $n; }

// Mixin to a column to append n empty columns to the left
// by adding left padding to the column.
@mixin prepend($n) {
  padding-left: $blueprint_grid_outer_width * $n; }

// Adds trailing margin.
@mixin append-bottom($amount: 1.5em) {
  margin-bottom: $amount; }

// Adds leading margin.
@mixin prepend-top($amount: 1.5em) {
  margin-top: $amount; }

// Base styles that make it possible to pull an element to the left.
// #### Note:
// This mixin gets applied automatically when using `+pull`
// so you probably don't need to use it directly unless
// you need to deviate from the grid or are trying
// to reduce the amount of generated CSS.
@mixin pull-base {
  @include float-left;
  position: relative; }

// The amount of pulling for element to the left.
// #### Note:
// This mixin gets applied automatically when using `+pull`
// so you probably don't need to use it directly unless
// you need to deviate from the grid or are trying
// to reduce the amount of generated CSS.
@mixin pull-margins($n, $last: false) {
  @if $last {
    margin-left: -$blueprint_grid_outer_width * $n + $blueprint_grid_margin; }
  @else {
    margin-left: -$blueprint_grid_outer_width * $n; } }

// Moves a column `n` columns to the left.
//
// This mixin can also be used to change the display order of columns.
//
// If pulling past the last (visually) element in a row,
// pass `true` as the second argument so the calculations can adjust
// accordingly.

// For example:
//
// HTML:
// <pre class="source-code html">
// <div id="one">One</div>
// <div id="two">Two</div>
// </pre>
// Sass:
// <pre class="source-code sass">
// #one
//   +column(18, true)
//   +prepend(6)
// #two
//   +column(6)
//   +pull(18, true)
// </pre>
@mixin pull($n, $last: false) {
  @include pull-base;
  @include pull-margins($n, $last); }

@mixin push-base {
  @include float-right;
  position: relative; }

@mixin push-margins($n) {
  margin: 0 (-$blueprint_grid_outer_width * $n) 1.5em $blueprint_grid_outer_width * $n; }

// mixin to a column to push it n columns to the right
@mixin push($n) {
  @include push-base;
  @include push-margins($n); }

// Border on right hand side of a column.
@mixin border($border_color: #eeeeee, $border_width: 1px) {
  padding-right: $blueprint_grid_margin / 2 - $border_width;
  margin-right: $blueprint_grid_margin / 2;
  border-right: #{$border_width} solid #{$border_color}; }

// Border with more whitespace, spans one column.
@mixin colborder($border_color: #eeeeee, $border_width: 1px) {
  padding-right: floor(($blueprint_grid_width + 2 * $blueprint_grid_margin - $border_width) / 2);
  margin-right: ceil(($blueprint_grid_width + 2 * $blueprint_grid_margin - $border_width) / 2);
  border-right: #{$border_width} solid #{$border_color}; }

// Mixin this to an hr to make a horizontal ruler across a column.
@mixin colruler($border_color: #dddddd) {
  background: $border_color;
  color: $border_color;
  clear: both;
  float: none;
  width: 100%;
  height: 0.1em;
  margin: 0 0 1.45em;
  border: none; }

// Mixin this to an hr to make a horizontal spacer across a column.
@mixin colspacer {
  @include colruler;
  background: white;
  color: white;
  visibility: hidden; }
:@options{:property_syntax0:css_filename"K/home/alberto/Gits/Subastkar/JaguarSoft/content/stylesheets/screen.css:load_paths[
"8/home/alberto/Gits/Subastkar/JaguarSoft/content/src"8/usr/share/compass/frameworks/blueprint/stylesheets"L/usr/share/compass/frameworks/_blueprint_deprecated_imports/stylesheets"6/usr/share/compass/frameworks/compass/stylesheets"J/usr/share/compass/frameworks/_compass_deprecated_imports/stylesheets:
cacheT:filename"O/usr/share/compass/frameworks/blueprint/stylesheets/./blueprint/_grid.scss:cache_location"@/home/alberto/Gits/Subastkar/JaguarSoft/content/.sass-cache:line_commentsT:syntax:	scss:
style:expanded:@has_childrenT:@children[9o:Sass::Tree::CommentNode;i:@silenti :@value"º/*  --------------------------------------------------------------
 *  SASS Gridification
 *  * Author:   Chris Eppstein
 *  A SASS adaptation of Blueprint CSS
 *  * Version:         0.7.1 (2008-02-25)
 *  * Website:         http://code.google.com/p/blueprintcss/
 *  Based on work by:
 *  * Lorin Tackett     [lorintackett.com]
 *  * Olav Bjorkoy      [bjorkoy.com]
 *  * Nathan Borror     [playgroundblues.com]
 *  * Jeff Croft        [jeffcroft.com]
 *  * Christian Metts   [mintchaos.com]
 *  * Khoi Vinh         [subtraction.com]
 *  Read more about using a grid here:
 *  * http://www.subtraction.com/2007/03/18/oh-yeeaahh
 *  -------------------------------------------------------------- */;@:@lines[ ;[ o:Sass::Tree::ImportNode
;i;0;@:@imported_filename"$compass/utilities/general/float;[ o;
;i;0;@;"'compass/utilities/general/clearfix;[ o;;i;i ;"-/* The number of columns in the grid. */;@;[ ;[ o:Sass::Tree::VariableNode;i:
@expro:Sass::Script::Number:@original"24;i:@context:default;i;{ :@denominator_units[ :@numerator_units[ :
@name"blueprint_grid_columns;@:@guarded"!default;[ o;;i;i ;" /* The width of a column */;@;[ ;[ o;;i;o;;"	30px;i; ;!;i#;{ ;"[ ;#["px;$"blueprint_grid_width;@;%"!default;[ o;;i ;i ;"//* The amount of margin between columns */;@;[ ;[ o;;i!;o;;"	10px;i!; ;!;i;{ ;"[ ;#["px;$"blueprint_grid_margin;@;%"!default;[ o;;i#;i ;"\/* The width of a column including the margin. With default settings this is `40px`. */;@;[ ;[ o;;i$;o:Sass::Script::Operation;i$:@operand2o:Sass::Script::Variable	;i$; ;!;$"blueprint_grid_margin;{ ; ;!:@operand1o;(	;i$; ;!;$"blueprint_grid_width;@M;@M:@operator:	plus;$"blueprint_grid_outer_width;@;%0;[ o;;i&;i ;"M/* The width of the container. With default settings this is `950px`. */;@;[ ;[ o;;i';o;&;i';'o;(	;i'; ;!;$"blueprint_grid_margin;{ ; ;!;)o;&;i';'o;(	;i'; ;!;$"blueprint_grid_columns;@Z; ;!;)o;(	;i'; ;!;$"blueprint_grid_outer_width;@Z;@Z;*:
times;@Z;*:
minus;$"blueprint_container_size;@;%0;[ o;;i);i ;"/* Generates presentational class names that you can use
 * in your html to layout your pages.
 *
 * #### Note:
 * Best practices discourage using this mixin,
 * but it is provided to support legacy websites
 * and to test the sass port against blueprint's example pages. */;@;[ ;[ o:Sass::Tree::MixinDefNode;i1:
@args[ ;$"blueprint-grid;@;T;[o;;i2;i ;"4/* A container should group all your columns */;@;[ ;[ o:Sass::Tree::RuleNode;i3:
@tabsi ;@:
@rule[".container;T;[o:Sass::Tree::MixinNode
;i4;/[ ;$"container;@;[ o;0;i5;1i ;@;2[".column, o:Sass::Script::Funcall
;i5; ;!;/[o:Sass::Script::String
;i5; ;!;"div.span;{ :
@type:stringo;;"1;i5; ;!;i;@};"[ ;#[ o;(	;i5; ;!;$"blueprint_grid_columns;@};$"enumerate;@};T;[o;3
;i6;/[ ;$"column-base;@;[ o;;i7;i ;"b/* The last column in a row needs this class (or mixin) or it will end up on the next row. */;@;[ ;[ o;0;i8;1i ;@;2[".last, div.last;T;[o;3
;i9;/[ ;$"	last;@;[ o;;i:;i ;"F/* Use these classes (or mixins) to set the width of a column. */;@;[ ;[ o:Sass::Tree::ForNode;i;:
@fromo;;"1;i;; ;!;i;{ ;"[ ;#[ :	@var"n;@:@too;(	;i;; ;!;$"blueprint_grid_columns;{ ;T:@exclusiveT;[o;0;i<;1i ;@;2[".span-o;(	;i<; ;!;$"n;{ ;T;[o;3
;i=;/[o;(	;i=; ;!;$"n;{ ;$"	span;@;[ o;0;i>;1i ;@;2[	".span-o;(	;i>; ;!;$"blueprint_grid_columns;{ ", div.span-o;(	;i>; ;!;$"blueprint_grid_columns;{ ;T;[o;3
;i?;/[o;(	;i?; ;!;$"blueprint_grid_columns;{ ;$"	span;@;[ o:Sass::Tree::PropNode;i@:@prop_syntax:new;1i ;$["margin;o;5; ;!;"0;6:identifier;@;[ o;0;iA;1i ;@;2["input, textarea, select;T;[o;8;iB;9o;;"1;iB; ;!;i;{ ;"[ ;#[ ;:"n;@;;o;(	;iB; ;!;$"blueprint_grid_columns;{ ;T;<F;[o;0;iC;1i ;@;2["&.span-o;(	;iC; ;!;$"n;{ ;T;[o;3
;iD;/[o;(	;iD; ;!;$"n;{ o:Sass::Script::Bool	;iD; ;!;T;@à;$"	span;@;[ o;;iE;i ;"6/* Add these to a column to append empty cols. */;@;[ ;[ o;8;iF;9o;;"1;iF; ;!;i;{ ;"[ ;#[ ;:"n;@;;o;(	;iF; ;!;$"blueprint_grid_columns;{ ;T;<T;[o;0;iG;1i ;@;2[".append-o;(	;iG; ;!;$"n;{ ;T;[o;3
;iH;/[o;(	;iH; ;!;$"n;{ ;$"append;@;[ o;;iI;i ;"7/* Add these to a column to prepend empty cols. */;@;[ ;[ o;8;iJ;9o;;"1;iJ; ;!;i;{ ;"[ ;#[ ;:"n;@;;o;(	;iJ; ;!;$"blueprint_grid_columns;{ ;T;<T;[o;0;iK;1i ;@;2[".prepend-o;(	;iK; ;!;$"n;{ ;T;[o;3
;iL;/[o;(	;iL; ;!;$"n;{ ;$"prepend;@;[ o;;iM;i ;"v/* Use these classes on an element to push it into the
 * next column, or to pull it into the previous column. */;@;[ ;[ o;0;iO;1i ;@;2[o;4
;iO; ;!;/[o;5
;iO; ;!;"
.pull;{ ;6;7o;;"1;iO; ;!;i;@(;"[ ;#[ o;(	;iO; ;!;$"blueprint_grid_columns;@(;$"enumerate;@(;T;[o;3
;iP;/[ ;$"pull-base;@;[ o;8;iQ;9o;;"1;iQ; ;!;i;{ ;"[ ;#[ ;:"n;@;;o;(	;iQ; ;!;$"blueprint_grid_columns;{ ;T;<F;[o;0;iR;1i ;@;2[".pull-o;(	;iR; ;!;$"n;{ ;T;[o;3
;iS;/[o;(	;iS; ;!;$"n;{ ;$"pull-margins;@;[ o;0;iT;1i ;@;2[o;4
;iT; ;!;/[o;5
;iT; ;!;"
.push;{ ;6;7o;;"1;iT; ;!;i;@T;"[ ;#[ o;(	;iT; ;!;$"blueprint_grid_columns;@T;$"enumerate;@T;T;[o;3
;iU;/[ ;$"push-base;@;[ o;8;iV;9o;;"1;iV; ;!;i;{ ;"[ ;#[ ;:"n;@;;o;(	;iV; ;!;$"blueprint_grid_columns;{ ;T;<F;[o;0;iW;1i ;@;2[".push-o;(	;iW; ;!;$"n;{ ;T;[o;3
;iX;/[o;(	;iX; ;!;$"n;{ ;$"push-margins;@;[ o;0;iY;1i ;@;2[".prepend-top;T;[o;3
;iZ;/[ ;$"prepend-top;@;[ o;0;i[;1i ;@;2[".append-bottom;T;[o;3
;i\;/[ ;$"append-bottom;@;[ o;;i^;i ;"Æ/* A container for your columns.
 *
 * #### Note:
 * If you use this mixin without the class and want to support ie6
 * you must set text-align left on your container element in an IE stylesheet. */;@;[ ;[ o;.;ic;/[ ;$"container;@;T;[o;=;id;>;?;1i ;$["
width;o;(	;id; ;!;$"blueprint_container_size;{ ;@;[ o;=;ie;>;?;1i ;$["margin;o;5; ;!;"0 auto;6;@;@;[ o;3
;if;/[ ;$"clearfix;@;[ o;;ih;i ;"k/* The last column in a row needs this mixin or it will end up
 * on the next row in some browsers. */;@;[ ;[ o;.;ij;/[ ;$"	last;@;T;[o;=;ik;>;?;1i ;$["margin-right;o;5; ;!;"0;6;@;@;[ o;;im;i ;"9/* Use this mixins to set the width of n columns. */;@;[ ;[ o;.;in;/[[o;(; ;!;$"n;{ 0[o;(; ;!;$"	last;@ºo;A	;in; ;!;F;@º;$"column;@;T;[o;3
;io;/[o;(	;io; ;!;$"	last;{ ;$"column-base;@;[ o;3
;ip;/[o;(	;ip; ;!;$"n;{ ;$"	span;@;[ o;;ir;i ;"Â/* Set only the width of an element to align it with the grid.
 * Most of the time you'll want to use `+column` instead.
 *
 * This mixin is especially useful for aligning tables to the grid. */;@;[ ;[ o;.;iv;/[[o;(; ;!;$"n;{ 0[o;(; ;!;$"override;@Øo;A	;iv; ;!;F;@Ø;$"	span;@;T;[o;;iw;o;&;iw;'o;&;iw;'o;&;iw;'o;;"1;iw; ;!;i;{ ;"[ ;#[ ; ;!;)o;(	;iw; ;!;$"n;@å;@å;*;-; ;!;)o;(	;iw; ;!;$"blueprint_grid_margin;@å;@å;*;,; ;!;)o;&;iw;'o;(	;iw; ;!;$"n;@å; ;!;)o;(	;iw; ;!;$"blueprint_grid_width;@å;@å;*;,;@å;*;+;$"
width;@;%0;[ o:Sass::Tree::IfNode;ix:@last_elseo;B
;C@ô;0;@;T;[o;=;i{;>;?;1i ;$["
width;o;(	;i{; ;!;$"
width;{ ;@;[ ;o;(	;ix; ;!;$"override;{ ;@:
@else@ô;T;[o;=;iy;>;?;1i ;$["
width;o;&;iy;'o;5
;iy; ;!;"!important;{ ;6;@; ;!;)o;(	;iy; ;!;$"
width;@;@;*:concat;@;[ o;;i};i ;"/* The basic set of styles needed to make an element
 * behave like a column:
 *
 * * floated to left
 * * gutter margin on the right (unless the last column)
 * * Some IE fixes
 *
 * #### Note:
 * This mixin gets applied automatically when using `+column`
 * so you probably don't need to use it directly unless
 * you need to deviate from the grid or are trying
 * to reduce the amount of generated CSS. */;@;[ ;[ o;.;i;/[[o;(; ;!;$"	last;{ o;A	;i; ;!;F;@;$"column-base;@;T;[o;3
;i;/[ ;$"float-left;@;[ o;B;i;Co;B
;C@;0;@;T;[o;=;i;>;?;1i ;$["margin-right;o;(	;i; ;!;$"blueprint_grid_margin;{ ;@;[ ;o;(	;i; ;!;$"	last;{ ;@;D@;T;[o;3
;i;/[ ;$"	last;@;[ o;0;i;1i ;@;2["* html &;T;[o;=;i;>;?;1i ;$["overflow-x;o;5; ;!;"hidden;6;@;@;[ o;;i;i ;"m/* Mixin to a column to append n empty columns to the right
 * by adding right padding to the column. */;@;[ ;[ o;.;i;/[[o;(; ;!;$"n;{ 0;$"append;@;T;[o;=;i;>;?;1i ;$["padding-right;o;&;i;'o;(	;i; ;!;$"n;{ ; ;!;)o;(	;i; ;!;$"blueprint_grid_outer_width;@J;@J;*;,;@;[ o;;i;i ;"k/* Mixin to a column to append n empty columns to the left
 * by adding left padding to the column. */;@;[ ;[ o;.;i;/[[o;(; ;!;$"n;{ 0;$"prepend;@;T;[o;=;i;>;?;1i ;$["padding-left;o;&;i;'o;(	;i; ;!;$"n;{ ; ;!;)o;(	;i; ;!;$"blueprint_grid_outer_width;@`;@`;*;,;@;[ o;;i;i ;" /* Adds trailing margin. */;@;[ ;[ o;.;i;/[[o;(; ;!;$"amount;{ o;;"
1.5em;i; ;!;f1.5;@m;"[ ;#["em;$"append-bottom;@;T;[o;=;i;>;?;1i ;$["margin-bottom;o;(	;i; ;!;$"amount;{ ;@;[ o;;i;i ;"/* Adds leading margin. */;@;[ ;[ o;.;i;/[[o;(; ;!;$"amount;{ o;;"
1.5em;i; ;!;f1.5;@;"[ ;#["em;$"prepend-top;@;T;[o;=;i;>;?;1i ;$["margin-top;o;(	;i; ;!;$"amount;{ ;@;[ o;;i;i ;"&/* Base styles that make it possible to pull an element to the left.
 * #### Note:
 * This mixin gets applied automatically when using `+pull`
 * so you probably don't need to use it directly unless
 * you need to deviate from the grid or are trying
 * to reduce the amount of generated CSS. */;@;[ ;[ o;.;i¥;/[ ;$"pull-base;@;T;[o;3
;i¦;/[ ;$"float-left;@;[ o;=;i§;>;?;1i ;$["position;o;5; ;!;"relative;6;@;@;[ o;;i©;i ;"/* The amount of pulling for element to the left.
 * #### Note:
 * This mixin gets applied automatically when using `+pull`
 * so you probably don't need to use it directly unless
 * you need to deviate from the grid or are trying
 * to reduce the amount of generated CSS. */;@;[ ;[ o;.;i¯;/[[o;(; ;!;$"n;{ 0[o;(; ;!;$"	last;@±o;A	;i¯; ;!;F;@±;$"pull-margins;@;T;[o;B;i°;Co;B
;C@¹;0;@;T;[o;=;i³;>;?;1i ;$["margin-left;o;&;i³;'o;(	;i³; ;!;$"n;{ ; ;!;)o:!Sass::Script::UnaryOperation
;i³:@operando;(	;i³; ;!;$"blueprint_grid_outer_width;@Á; ;!;@Á;*;-;@Á;*;,;@;[ ;o;(	;i°; ;!;$"	last;{ ;@;D@¹;T;[o;=;i±;>;?;1i ;$["margin-left;o;&;i±;'o;(	;i±; ;!;$"blueprint_grid_margin;{ ; ;!;)o;&;i±;'o;(	;i±; ;!;$"n;@Ð; ;!;)o;F
;i±;Go;(	;i±; ;!;$"blueprint_grid_outer_width;@Ð; ;!;@Ð;*;-;@Ð;*;,;@Ð;*;+;@;[ o;;iµ;i ;"/* Moves a column `n` columns to the left.
 *
 * This mixin can also be used to change the display order of columns.
 *
 * If pulling past the last (visually) element in a row,
 * pass `true` as the second argument so the calculations can adjust
 * accordingly. */;@;[ ;[ o;;i½;i ;"/* For example:
 *
 * HTML:
 * <pre class="source-code html">
 * <div id="one">One</div>
 * <div id="two">Two</div>
 * </pre>
 * Sass:
 * <pre class="source-code sass">
 * #one
 *   +column(18, true)
 *   +prepend(6)
 * #two
 *   +column(6)
 *   +pull(18, true)
 * </pre> */;@;[ ;[ o;.;iÍ;/[[o;(; ;!;$"n;{ 0[o;(; ;!;$"	last;@åo;A	;iÍ; ;!;F;@å;$"	pull;@;T;[o;3
;iÎ;/[ ;$"pull-base;@;[ o;3
;iÏ;/[o;(	;iÏ; ;!;$"n;{ o;(	;iÏ; ;!;$"	last;@ô;$"pull-margins;@;[ o;.;iÑ;/[ ;$"push-base;@;T;[o;3
;iÒ;/[ ;$"float-right;@;[ o;=;iÓ;>;?;1i ;$["position;o;5; ;!;"relative;6;@;@;[ o;.;iÕ;/[[o;(; ;!;$"n;{ 0;$"push-margins;@;T;[o;=;iÖ;>;?;1i ;$["margin;o;&;iÖ;'o;&;iÖ;'o;(	;iÖ; ;!;$"n;{ ; ;!;)o;(	;iÖ; ;!;$"blueprint_grid_outer_width;@;@;*;,; ;!;)o;&;iÖ;'o;;"
1.5em;iÖ; ;!;f1.5;@;"[ ;#["em; ;!;)o;&;iÖ;'o;&;iÖ;'o;(	;iÖ; ;!;$"n;@; ;!;)o;F
;iÖ;Go;(	;iÖ; ;!;$"blueprint_grid_outer_width;@; ;!;@;*;-;@;*;,; ;!;)o;;"0;iÖ; ;!;i ;@;"[ ;#[ ;@;*;E;@;*;E;@;*;E;@;[ o;;iØ;i ;">/* mixin to a column to push it n columns to the right */;@;[ ;[ o;.;iÙ;/[[o;(; ;!;$"n;{ 0;$"	push;@;T;[o;3
;iÚ;/[ ;$"push-base;@;[ o;3
;iÛ;/[o;(	;iÛ; ;!;$"n;{ ;$"push-margins;@;[ o;;iÝ;i ;"1/* Border on right hand side of a column. */;@;[ ;[ o;.;iÞ;/[[o;(; ;!;$"border_color;{ o:Sass::Script::Color
;iÞ; ;!;0;@L:@attrs{	:rediî:
alphai:
greeniî:	blueiî[o;(; ;!;$"border_width;@Lo;;"1px;iÞ; ;!;i;@L;"[ ;#["px;$"border;@;T;[o;=;iß;>;?;1i ;$["padding-right;o;&;iß;'o;(	;iß; ;!;$"border_width;{ ; ;!;)o;&;iß;'o;;"2;iß; ;!;i;@_;"[ ;#[ ; ;!;)o;(	;iß; ;!;$"blueprint_grid_margin;@_;@_;*:div;@_;*;-;@;[ o;=;ià;>;?;1i ;$["margin-right;o;&;ià;'o;;"2;ià; ;!;i;{ ;"[ ;#[ ; ;!;)o;(	;ià; ;!;$"blueprint_grid_margin;@n;@n;*;N;@;[ o;=;iá;>;?;1i ;$["border-right;o: Sass::Script::Interpolation;iá:@after0:@originally_textF;{ :	@mido;(	;iá; ;!;$"border_color;@x:@whitespace_after0:@beforeo;O;iá;Po;5
;iá; ;!;"
solid;@x;6;@;QF;@x;Ro;(	;iá; ;!;$"border_width;@x;Si ;T0:@whitespace_beforei´;UiË;@;[ o;;iã;i ;"9/* Border with more whitespace, spans one column. */;@;[ ;[ o;.;iä;/[[o;(; ;!;$"border_color;{ o;H
;iä; ;!;0;@;I{	;Jiî;Ki;Liî;Miî[o;(; ;!;$"border_width;@o;;"1px;iä; ;!;i;@;"[ ;#["px;$"colborder;@;T;[o;=;iå;>;?;1i ;$["padding-right;o;4
;iå; ;!;/[o;&;iå;'o;;"2;iå; ;!;i;{ ;"[ ;#[ ; ;!;)o;&;iå;'o;(	;iå; ;!;$"border_width;@; ;!;)o;&;iå;'o;&;iå;'o;(	;iå; ;!;$"blueprint_grid_margin;@; ;!;)o;;"2;iå; ;!;i;@;"[ ;#[ ;@;*;,; ;!;)o;(	;iå; ;!;$"blueprint_grid_width;@;@;*;+;@;*;-;@;*;N;$"
floor;@;@;[ o;=;iæ;>;?;1i ;$["margin-right;o;4
;iæ; ;!;/[o;&;iæ;'o;;"2;iæ; ;!;i;{ ;"[ ;#[ ; ;!;)o;&;iæ;'o;(	;iæ; ;!;$"border_width;@¹; ;!;)o;&;iæ;'o;&;iæ;'o;(	;iæ; ;!;$"blueprint_grid_margin;@¹; ;!;)o;;"2;iæ; ;!;i;@¹;"[ ;#[ ;@¹;*;,; ;!;)o;(	;iæ; ;!;$"blueprint_grid_width;@¹;@¹;*;+;@¹;*;-;@¹;*;N;$"	ceil;@¹;@;[ o;=;iç;>;?;1i ;$["border-right;o;O;iç;P0;QF;{ ;Ro;(	;iç; ;!;$"border_color;@Ï;S0;To;O;iç;Po;5
;iç; ;!;"
solid;@Ï;6;@;QF;@Ï;Ro;(	;iç; ;!;$"border_width;@Ï;Si ;T0;Ui#;Ui:;@;[ o;;ié;i ;"J/* Mixin this to an hr to make a horizontal ruler across a column. */;@;[ ;[ o;.;iê;/[[o;(; ;!;$"border_color;{ o;H
;iê; ;!;0;@á;I{	;JiÝ;Ki;LiÝ;MiÝ;$"colruler;@;T;[o;=;ië;>;?;1i ;$["background;o;(	;ië; ;!;$"border_color;{ ;@;[ o;=;iì;>;?;1i ;$["
color;o;(	;iì; ;!;$"border_color;{ ;@;[ o;=;ií;>;?;1i ;$["
clear;o;5; ;!;"	both;6;@;@;[ o;=;iî;>;?;1i ;$["
float;o;5; ;!;"	none;6;@;@;[ o;=;iï;>;?;1i ;$["
width;o;5; ;!;"	100%;6;@;@;[ o;=;ið;>;?;1i ;$["height;o;5; ;!;"
0.1em;6;@;@;[ o;=;iñ;>;?;1i ;$["margin;o;5; ;!;"0 0 1.45em;6;@;@;[ o;=;iò;>;?;1i ;$["border;o;5; ;!;"	none;6;@;@;[ o;;iô;i ;"K/* Mixin this to an hr to make a horizontal spacer across a column. */;@;[ ;[ o;.;iõ;/[ ;$"colspacer;@;T;[	o;3
;iö;/[ ;$"colruler;@;[ o;=;i÷;>;?;1i ;$["background;o;5; ;!;"
white;6;@;@;[ o;=;iø;>;?;1i ;$["
color;o;5; ;!;"
white;6;@;@;[ o;=;iù;>;?;1i ;$["visibility;o;5; ;!;"hidden;6;@;@;[ 